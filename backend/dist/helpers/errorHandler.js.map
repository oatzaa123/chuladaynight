{"version":3,"sources":["../../helpers/errorHandler.js"],"names":["ErrorHandler","message","statusCode","status","startsWith","isOperational","Error","captureStackTrace","constructor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAAMA,Y;;;;;AACF,wBAAYC,OAAZ,EAAqBC,UAArB,EAAiC;AAAA;;AAAA;AAC7B,8BAAMD,OAAN;AAEA,UAAKC,UAAL,GAAkBA,UAAlB;AACA,UAAKC,MAAL,GAAc,UAAGD,UAAH,EAAgBE,UAAhB,CAA2B,GAA3B,IAAkC,MAAlC,GAA2C,OAAzD;AACA,UAAKC,aAAL,GAAqB,IAArB;AAEAC,IAAAA,KAAK,CAACC,iBAAN,8CAA8B,MAAKC,WAAnC;AAP6B;AAQhC;;;+CATsBF,K;;eAYZN,Y","sourcesContent":["class ErrorHandler extends Error {\r\n    constructor(message, statusCode) {\r\n        super(message)\r\n\r\n        this.statusCode = statusCode\r\n        this.status = `${statusCode}`.startsWith('4') ? 'fail' : 'error'\r\n        this.isOperational = true\r\n\r\n        Error.captureStackTrace(this, this.constructor)\r\n    }\r\n}\r\n\r\nexport default ErrorHandler\r\n"],"file":"errorHandler.js"}