{"version":3,"sources":["../../helpers/errorController.js"],"names":["handleCastErrorDB","err","message","path","value","ErrorHandler","handleDuplicateFieldsDB","errmsg","match","handleValidationErrorDB","errors","Object","values","map","el","join","handleJWTError","handleJWTExpiredError","sendErrorDev","res","status","statusCode","json","error","stack","sendErrorProd","isOperational","console","req","next","process","env","NODE_ENV","name","code"],"mappings":"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","sourcesContent":["import ErrorHandler from './errorHandler'\r\n\r\nconst handleCastErrorDB = (err) => {\r\n    const message = `Invalid ${err.path}: ${err.value}`\r\n    return new ErrorHandler(message, 400)\r\n}\r\n\r\nconst handleDuplicateFieldsDB = (err) => {\r\n    const value = err.errmsg.match(/((?=(\\\\?))\\2.)/)[0]\r\n    const message = `Duplicate field value: ${value}. Please use another value!`\r\n    return new ErrorHandler(message, 400)\r\n}\r\n\r\nconst handleValidationErrorDB = (err) => {\r\n    const errors = Object.values(err.errors).map((el) => el.message)\r\n    const message = `Invalid input data. ${errors.join('. ')}`\r\n    return new ErrorHandler(message, 400)\r\n}\r\n\r\nconst handleJWTError = () =>\r\n    new ErrorHandler(`Invalid token. Please login again!`, 401)\r\n\r\nconst handleJWTExpiredError = () =>\r\n    new ErrorHandler(`Your token has expired! Please login again.`, 401)\r\n\r\nconst sendErrorDev = (err, res) => {\r\n    res.status(err.statusCode).json({\r\n        status: err.status,\r\n        error: err,\r\n        message: err.message,\r\n        stack: err.stack,\r\n    })\r\n}\r\n\r\nconst sendErrorProd = (err, res) => {\r\n    if (err.isOperational) {\r\n        res.status(err.statusCode).json({\r\n            status: err.status,\r\n            message: err.message,\r\n        })\r\n    } else {\r\n        console.error('ERROR', err)\r\n\r\n        res.status(500).json({\r\n            status: 'error',\r\n            message: 'Something went very wrong!',\r\n        })\r\n    }\r\n}\r\n\r\nexport default function (err, req, res, next) {\r\n    err.statusCode = err.statusCode || 500\r\n    err.status = err.status || 'error'\r\n\r\n    if (process.env.NODE_ENV === 'development') {\r\n        sendErrorDev(err, res)\r\n    } else if (process.env.NODE_ENV === 'production') {\r\n        let error = { ...err }\r\n\r\n        if (error.name === 'CastError') error = handleCastErrorDB(error)\r\n\r\n        if (error.code === 11000) error = handleDuplicateFieldsDB(error)\r\n\r\n        if (error.name === 'ValidationError')\r\n            error = handleValidationErrorDB(error)\r\n\r\n        if (error.name === 'JsonWebTokenError') error = handleJWTError()\r\n\r\n        if (error.name === 'TokenExpiredError') error = handleJWTExpiredError()\r\n\r\n        sendErrorProd(error, res)\r\n    }\r\n}\r\n"],"file":"errorController.js"}