{"version":3,"sources":["../../../../modules/web/article/article.controller.js"],"names":["unlink","util","promisify","fs","getArticles","req","res","next","featuresArticle","APIFeatures","Article","find","query","filter","limitFields","paginate","sort","AllArticle","status","json","data","getArticle","id","params","findById","article","ErrorHandler","addArticle","path","body","files","coverImage","name","coverImageName","obj","create","updateArticle","title_en","title_th","description_th","description_en","year","oldFile","JSON","parse","existsSync","paths","join","__dirname","unlinkSync","save","deleteArticle","imageDirectory","checkImages","deleteOne","_id","send","directory","filename","unlinkPromises"],"mappings":"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","sourcesContent":["import catchAsync from '../../../helpers/catchAsync'\r\nimport APIFeatures from '../../../utils/apiFeatures'\r\nimport ErrorHandler from '../../../helpers/errorHandler'\r\nimport Article from './../../models/article.model'\r\nimport { uploadFile } from './../../../middleware/upload'\r\nimport fs from 'fs'\r\nimport paths from 'path'\r\nimport util from 'util'\r\nconst unlink = util.promisify(fs.unlink)\r\n\r\nexport const getArticles = catchAsync(async (req, res, next) => {\r\n    const featuresArticle = new APIFeatures(Article.find(), req.query)\r\n        .filter()\r\n        .limitFields()\r\n        .paginate()\r\n        .sort()\r\n\r\n    const AllArticle = await featuresArticle.query\r\n    res.status(200).json({\r\n        status: 'success',\r\n        data: {\r\n            Article: AllArticle,\r\n        },\r\n    })\r\n})\r\n\r\nexport const getArticle = catchAsync(async (req, res, next) => {\r\n    const { id } = req.params\r\n    const article = await Article.findById(id)\r\n\r\n    if (!article) return next(new ErrorHandler('Data not found', 404))\r\n\r\n    res.status(200).json({\r\n        status: 'success',\r\n        data: {\r\n            article,\r\n        },\r\n    })\r\n})\r\n\r\nexport const addArticle = catchAsync(async (req, res, next) => {\r\n    let coverImageName\r\n    const { path } = req.body\r\n\r\n    if (req.files) {\r\n        const { coverImage } = req.files\r\n        if (coverImage) {\r\n            const name = await uploadFile(coverImage, path)\r\n            if (!name)\r\n                return next(new ErrorHandler(`Fail to upload image.`, 400))\r\n            coverImageName = {\r\n                path,\r\n                name,\r\n            }\r\n        }\r\n    }\r\n\r\n    let obj = {\r\n        ...req.body,\r\n        coverImage: coverImageName,\r\n    }\r\n\r\n    const article = await Article.create(obj)\r\n\r\n    res.status(201).json({\r\n        status: 'success',\r\n        data: {\r\n            article,\r\n        },\r\n    })\r\n})\r\n\r\nexport const updateArticle = catchAsync(async (req, res, next) => {\r\n    let coverImageName\r\n    const { id } = req.params\r\n    const {\r\n        path,\r\n        title_en,\r\n        title_th,\r\n        description_th,\r\n        description_en,\r\n        year,\r\n        oldFile,\r\n    } = req.body\r\n\r\n    let article = await Article.findById(id)\r\n\r\n    if (!article) return next(new ErrorHandler('Data not found', 404))\r\n    if (req.files) {\r\n        const { coverImage } = req.files\r\n        if (coverImage) {\r\n            if (\r\n                JSON.parse(oldFile) &&\r\n                JSON.parse(oldFile).coverImage &&\r\n                fs.existsSync(\r\n                    paths.join(\r\n                        __dirname,\r\n                        `../../../assets/uploads/images/${path}/${\r\n                            JSON.parse(oldFile).coverImage\r\n                        }`\r\n                    )\r\n                )\r\n            ) {\r\n                fs.unlinkSync(\r\n                    paths.join(\r\n                        __dirname,\r\n                        `../../../assets/uploads/images/${path}/`,\r\n                        JSON.parse(oldFile).coverImage\r\n                    )\r\n                )\r\n            }\r\n            const name = await uploadFile(coverImage, path)\r\n            if (!name)\r\n                return next(new ErrorHandler(`Fail to upload image.`, 400))\r\n            coverImageName = {\r\n                path,\r\n                name,\r\n            }\r\n\r\n            article.coverImage = coverImageName\r\n        }\r\n    }\r\n\r\n    article.title_th = title_th\r\n    article.title_en = title_en\r\n    article.description_th = description_th\r\n    article.description_en = description_en\r\n    article.year = year\r\n    await article.save()\r\n\r\n    res.status(201).json({\r\n        status: 'success',\r\n        data: {\r\n            article,\r\n        },\r\n    })\r\n})\r\n\r\nexport const deleteArticle = catchAsync(async (req, res, next) => {\r\n    const { id } = req.params\r\n\r\n    const article = await Article.findById(id)\r\n    const { path, name } = article.coverImage\r\n\r\n    const imageDirectory = paths.join(\r\n        __dirname,\r\n        `../../../assets/uploads/images/${path}`\r\n    )\r\n\r\n    await checkImages(imageDirectory, name)\r\n\r\n    await Article.deleteOne({ _id: id })\r\n    res.status(204).send()\r\n})\r\n\r\nconst checkImages = async (directory, filename) => {\r\n    const unlinkPromises = await unlink(`${directory}/${filename}`)\r\n\r\n    return unlinkPromises\r\n}\r\n"],"file":"article.controller.js"}